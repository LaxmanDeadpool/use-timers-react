import{useRef as e,useMemo as r,useCallback as t,useEffect as l}from"react";let n;n=void 0!==import.meta.env?"production"!==import.meta.env.MODE:"production"!==process.env.NODE_ENV;const o=e=>{n&&console.warn(e+"\nThis is a development only warning.")},s=(n,s,c)=>{const i=e(new Map).current,a=r(()=>function(e,r){const t=(l,n,o,s,c)=>{const i=e(l,n);return{clear:()=>{r(i),null==s||s()},reset:()=>{r(i);const e=t(l,n,o,s,c);return null==c||c(),e},id:o}};return(e,r,l)=>{const n=Symbol();return t(e,r,n,null==l?void 0:l.onClear,null==l?void 0:l.onReset)}}(n,s),[]),u=t((e,r,t)=>{const l="object"==typeof t,{clear:n,id:s,reset:u}=a(e,r,l?t:void 0),m=l?t.key:t;return i.set(s,{userDefinedId:m,clear:n,reset:u}),{clear:()=>{var e;const r=null==(e=i.get(s))?void 0:e.clear;r?(r(),i.delete(s)):o(c+" doesn't exist")},reset:()=>{var e;const r=null==(e=i.get(s))?void 0:e.reset;if(!r)return void o(c+" doesn't exist");const{clear:t,reset:l}=r();i.set(s,{userDefinedId:m,clear:t,reset:l})},id:s}},[]),m=t(e=>{if("string"==typeof e){for(const[,{clear:r,userDefinedId:t}]of i)if(t===e){r();break}}else e.clear()},[]),d=t(()=>i.forEach(({clear:e})=>e()),[]);return l(()=>d,[]),{setCustomTimer:u,clearCustomTimer:m,clearAllTimers:d}},c=()=>{const{setCustomTimer:e,clearAllTimers:r,clearCustomTimer:t}=s(setInterval,clearInterval,"Interval");return{setInterval:e,clearInterval:t,clearAllIntervals:r}},i=()=>{const{setCustomTimer:e,clearAllTimers:r,clearCustomTimer:t}=s(setTimeout,clearTimeout,"Timeout");return{setTimeout:e,clearTimeout:t,clearAllTimeouts:r}};export{c as useInterval,i as useTimeout};
//# sourceMappingURL=index.mjs.map
