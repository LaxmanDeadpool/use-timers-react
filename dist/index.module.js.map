{"version":3,"file":"index.module.js","sources":["../src/utils.ts","../src/timerFactory.ts","../src/useTimer.ts","../src/useInterval.ts","../src/useTimeout.ts"],"sourcesContent":["export const isNotUserDefinedId = (arg: any): boolean =>\n  typeof arg !== 'string';\n\nlet isNotProductionEnv: boolean;\n\n// if (typeof __DEV__ !== 'undefined') {\n//   // for react native\n//   isNotProductionEnv = __DEV__;\n// } else\nif (typeof (import.meta as any).env !== 'undefined') {\n  isNotProductionEnv = (import.meta as any).env.MODE !== 'production';\n} else {\n  isNotProductionEnv = process.env.NODE_ENV !== 'production';\n}\n\nexport const throwDevWaring = (msg: string) => {\n  isNotProductionEnv &&\n    console.warn(msg + '\\nThis is a development only warning.');\n};\n","import { ClearTimer, CreateTimer, TimerConfig, TimerFn, VoidFn } from './types';\n\nexport function timerFactory(timerFn: TimerFn, clearTimer: ClearTimer) {\n  const _createTimer = (\n    cb: VoidFn,\n    delay: number,\n    id: symbol,\n    onClear: VoidFn | undefined,\n    onReset: VoidFn | undefined\n  ): CreateTimer => {\n    const jsId = timerFn(cb, delay);\n    const clear = () => {\n      clearTimer(jsId);\n      onClear?.();\n    };\n    const reset = () => {\n      clearTimer(jsId);\n      const newTimer = _createTimer(cb, delay, id, onClear, onReset);\n      onReset?.();\n      return newTimer;\n    };\n    return {\n      clear,\n      reset,\n      id,\n    };\n  };\n\n  const createTimer = (cb: VoidFn, delay: number, config?: TimerConfig) => {\n    const id = Symbol();\n    return _createTimer(cb, delay, id, config?.onClear, config?.onReset);\n  };\n\n  return createTimer;\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useRef, useEffect, useCallback, useMemo } from 'react';\nimport { isNotUserDefinedId, throwDevWaring } from './utils';\nimport {\n  VoidFn,\n  UserDefinedId,\n  ID,\n  TimerMetadata,\n  UseTimer,\n  TimerFn,\n  ClearTimer,\n  TimerConfig,\n} from './types';\nimport { timerFactory } from './timerFactory';\n\nexport const useTimer = (\n  timerFn: TimerFn,\n  clearTimer: ClearTimer,\n  type: 'Timeout' | 'Interval'\n) => {\n  const timers = useRef<Map<ID, TimerMetadata>>(new Map()).current;\n  const createTimer = useMemo(() => timerFactory(timerFn, clearTimer), []);\n\n  const setCustomTimer = useCallback(\n    (cb: VoidFn, delay: number, param3?: UserDefinedId | TimerConfig) => {\n      const isConfigProvided = typeof param3 === 'object';\n      const { clear, id, reset } = createTimer(\n        cb,\n        delay,\n        isConfigProvided ? param3 : undefined\n      );\n      const userDefinedId = isConfigProvided ? param3.key : param3;\n\n      timers.set(id, {\n        userDefinedId,\n        clear: clear,\n        reset: reset,\n      });\n\n      const stop = () => {\n        const latestClearFn = timers.get(id)?.clear;\n        if (!latestClearFn) {\n          throwDevWaring(type + \" doesn't exist\");\n          return;\n        }\n        latestClearFn();\n      };\n\n      const _clear = () => {\n        const latestClearFn = timers.get(id)?.clear;\n        if (!latestClearFn) {\n          throwDevWaring(type + \" doesn't exist\");\n          return;\n        }\n        latestClearFn();\n        timers.delete(id);\n      };\n\n      const _reset = () => {\n        const latestResetFn = timers.get(id)?.reset;\n        if (!latestResetFn) {\n          throwDevWaring(type + \" doesn't exist\");\n          return;\n        }\n        const { clear: newClear, reset: newReset } = latestResetFn();\n        timers.set(id, {\n          userDefinedId,\n          clear: newClear,\n          reset: newReset,\n        });\n      };\n\n      return {\n        clear: _clear,\n        reset: _reset,\n        stop,\n        id,\n      };\n    },\n    []\n  );\n\n  const clearCustomTimer = useCallback(\n    (timeoutToClear: UserDefinedId | UseTimer) => {\n      if (isNotUserDefinedId(timeoutToClear)) {\n        (timeoutToClear as UseTimer).clear();\n        return;\n      }\n\n      for (const [, { clear, userDefinedId }] of timers) {\n        if (userDefinedId === timeoutToClear) {\n          clear();\n          break;\n        }\n      }\n    },\n    []\n  );\n\n  const clearAllTimers = useCallback(\n    () => timers.forEach(({ clear }) => clear()),\n    []\n  );\n\n  useEffect(() => clearAllTimers, []);\n\n  return {\n    setCustomTimer,\n    clearCustomTimer,\n    clearAllTimers,\n  };\n};\n","import { useTimer } from './useTimer';\n\nexport const useInterval = () => {\n  const { setCustomTimer, clearAllTimers, clearCustomTimer } = useTimer(\n    setInterval,\n    clearInterval,\n    'Interval'\n  );\n\n  return {\n    setInterval: setCustomTimer,\n    clearInterval: clearCustomTimer,\n    clearAllIntervals: clearAllTimers,\n  };\n};\n\nexport type SetIntervalFn = UseInterval['setInterval'];\nexport type ClearIntervalFn = UseInterval['clearInterval'];\nexport type ClearAllIntervalsFn = UseInterval['clearAllIntervals'];\n\nexport type SetInterval = ReturnType<SetIntervalFn>;\n\nexport type UseInterval = ReturnType<typeof useInterval>;\n","import { useTimer } from './useTimer';\n\nexport const useTimeout = () => {\n  const { setCustomTimer, clearAllTimers, clearCustomTimer } = useTimer(\n    setTimeout,\n    clearTimeout,\n    'Timeout'\n  );\n\n  return {\n    setTimeout: setCustomTimer,\n    clearTimeout: clearCustomTimer,\n    clearAllTimeouts: clearAllTimers,\n  };\n};\n\nexport type SetTimeoutFn = UseTimeout['setTimeout'];\nexport type ClearTimeoutFn = UseTimeout['clearTimeout'];\nexport type ClearAllTimeoutsFn = UseTimeout['clearAllTimeouts'];\n\nexport type SetTimeout = ReturnType<SetTimeoutFn>;\n\nexport type UseTimeout = ReturnType<typeof useTimeout>;\n"],"names":["isNotProductionEnv","env","MODE","process","NODE_ENV","throwDevWaring","msg","console","warn","timerFactory","timerFn","clearTimer","_createTimer","cb","delay","id","onClear","onReset","jsId","clear","reset","newTimer","config","Symbol","useTimer","type","timers","useRef","Map","current","createTimer","useMemo","setCustomTimer","useCallback","param3","isConfigProvided","undefined","userDefinedId","key","set","_timers$get2","latestClearFn","get","_timers$get3","latestResetFn","_latestResetFn","stop","_timers$get","clearCustomTimer","timeoutToClear","_step","_iterator","_createForOfIteratorHelperLoose","done","_step$value$","value","clearAllTimers","forEach","_ref","useEffect","useInterval","_useTimer","setInterval","clearInterval","clearAllIntervals","useTimeout","setTimeout","clearTimeout","clearAllTimeouts"],"mappings":"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"}